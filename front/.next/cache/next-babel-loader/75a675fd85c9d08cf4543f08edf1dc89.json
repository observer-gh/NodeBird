{"ast":null,"code":"var _jsxFileName = \"/Users/taekyun_ha/Library/Mobile Documents/com~apple~CloudDocs/\\u1107\\u1167\\u11BC\\u1110\\u1173\\u11A8 \\u110E\\u1171\\u110C\\u116E\\u11AB/whoyaho_study/nodeBird/front/pages/signup.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport { Form, Input } from 'antd';\nimport AppLayout from '../components/AppLayout';\nimport useInput from '../hooks/useInput';\n\nconst Signup = () => {\n  /* get values to use */\n\n  /* value and setter */\n  const [id, onChangeId] = useInput('');\n  const [nick, onChangeNick] = useInput(\"\");\n  const [password, onChangePassword] = useInput('');\n  /* functions to be used */\n\n  const onSubmit = () => {};\n  /* the component we return */\n\n\n  return (\n    /* can return only 1 parent elem, so use <> */\n    __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, \"NodeBird\")), __jsx(AppLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      onFinish: onSubmit,\n      style: {\n        padding: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, \"ID\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }), \" \", __jsx(Input, {\n      name: \"user-id\",\n      value: id,\n      required: true,\n      onChange: onChangeId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-nick\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, \"NickName\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }), \" \", __jsx(Input, {\n      name: \"user-nick\",\n      value: nick,\n      required: true,\n      onChange: onChangeNick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, \"Password\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }), \" \", __jsx(Input, {\n      name: \"user-password\",\n      type: \"password\",\n      value: password,\n      required: true,\n      onChange: onChangePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }))))\n  );\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/taekyun_ha/Library/Mobile Documents/com~apple~CloudDocs/병특 취준/whoyaho_study/nodeBird/front/pages/signup.tsx"],"names":["React","Head","Form","Input","AppLayout","useInput","Signup","id","onChangeId","nick","onChangeNick","password","onChangePassword","onSubmit","padding"],"mappings":";;AAAA,OAAOA,KAAP,MAAwD,OAAxD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAA2BC,IAA3B,EAAiCC,KAAjC,QAA8C,MAA9C;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,MAAU,GAAG,MAAM;AACrB;;AACA;AACA,QAAM,CAACC,EAAD,EAAKC,UAAL,IAAmBH,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACI,IAAD,EAAOC,YAAP,IAAuBL,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACM,QAAD,EAAWC,gBAAX,IAA+BP,QAAQ,CAAC,EAAD,CAA7C;AAEA;;AACA,QAAMQ,QAAQ,GAAG,MAAM,CAEtB,CAFD;AAMA;;;AACA;AACI;AACA,gCACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,EAII,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAEA,QAAhB;AAA0B,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,OAGI,MAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,KAAK,EAAEP,EAA7B;AAA2C,MAAA,QAAQ,MAAnD;AACA,MAAA,QAAQ,EAAEC,UADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,OAGI,MAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,KAAK,EAAEC,IAA/B;AAAqC,MAAA,QAAQ,MAA7C;AACA,MAAA,QAAQ,EAAEC,YADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAPJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,OAGI,MAAC,KAAD;AAAO,MAAA,IAAI,EAAC,eAAZ;AAA4B,MAAA,IAAI,EAAC,UAAjC;AAA4C,MAAA,KAAK,EAAEC,QAAnD;AAAuE,MAAA,QAAQ,MAA/E;AACA,MAAA,QAAQ,EAAEC,gBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAbJ,EAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,CAFJ,CAJJ;AAFJ;AAmCH,CAlDD;;AAoDA,eAAeN,MAAf","sourcesContent":["import React, { useState, FC, ChangeEventHandler } from 'react';\nimport Head from 'next/head';\nimport { Button, Checkbox, Form, Input } from 'antd';\n\nimport AppLayout from '../components/AppLayout';\nimport useInput from '../hooks/useInput';\n\nconst Signup: FC = () => {\n    /* get values to use */\n    /* value and setter */\n    const [id, onChangeId] = useInput('');\n    const [nick, onChangeNick] = useInput(\"\");\n    const [password, onChangePassword] = useInput('');\n\n    /* functions to be used */\n    const onSubmit = () => {\n\n    }\n\n\n\n    /* the component we return */\n    return (\n        /* can return only 1 parent elem, so use <> */\n        <>\n            <Head>\n                <title>NodeBird</title>\n            </Head>\n            <AppLayout>\n                {/* Form for the 4 input fields */}\n                <Form onFinish={onSubmit} style={{ padding: 10 }}>\n                    <div>\n                        <label htmlFor=\"user-id\">ID</label>\n                        <br /> {/* line breaker */}\n                        <Input name=\"user-id\" value={id as string} required \n                        onChange={onChangeId as ChangeEventHandler<HTMLInputElement>}/>\n                    </div>\n                    <div>\n                        <label htmlFor=\"user-nick\">NickName</label>\n                        <br /> {/* line breaker */}\n                        <Input name=\"user-nick\" value={nick} required\n                        onChange={onChangeNick as ChangeEventHandler<HTMLInputElement>}></Input>\n                    </div>\n                    <div>\n                        <label htmlFor=\"user-password\">Password</label>\n                        <br /> {/* line breaker */}\n                        <Input name=\"user-password\" type=\"password\" value={password as string} required\n                        onChange={onChangePassword as ChangeEventHandler<HTMLInputElement>}></Input>\n                    </div>\n                    {/* div for password check */}\n                    <div>\n\n                    </div>\n                </Form>\n            </AppLayout>\n        </>\n    );\n};\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}