{"ast":null,"code":"var _jsxFileName = \"/Users/taekyun_ha/Library/Mobile Documents/com~apple~CloudDocs/\\u1107\\u1167\\u11BC\\u1110\\u1173\\u11A8 \\u110E\\u1171\\u110C\\u116E\\u11AB/whoyaho_study/nodeBird/front/pages/signup.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport { Form, Input } from 'antd';\nimport AppLayout from '../components/AppLayout';\nimport useInput from '../hooks/useInput';\n\nconst Signup = () => {\n  /* get values to use */\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  /* value and setter */\n\n  /* not sure why we needed the useInput() hook? */\n\n  const [id, onChangeId] = useInput('');\n  const [nick, onChangeNick] = useInput(\"\");\n  const [password, onChangePassword] = useInput('');\n  /* functions to be used */\n\n  const onSubmit = () => {};\n  /* ?? etype? */\n\n\n  const onChangePasswordCheck = e => {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  };\n  /* the component we return */\n\n\n  return (\n    /* can return only 1 parent elem, so use <> */\n    __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"NodeBird\")), __jsx(AppLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      onFinish: onSubmit,\n      style: {\n        padding: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, \"ID\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }), \" \", __jsx(Input, {\n      name: \"user-id\",\n      value: id,\n      required: true,\n      onChange: onChangeId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-nick\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, \"NickName\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }), \" \", __jsx(Input, {\n      name: \"user-nick\",\n      value: nick,\n      required: true,\n      onChange: onChangeNick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, \"Password\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }), \" \", __jsx(Input, {\n      name: \"user-password\",\n      type: \"password\",\n      value: password,\n      required: true,\n      onChange: onChangePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-password-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"Confirm Password\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }), __jsx(Input, {\n      name: \"user-password-check\",\n      type: \"password\",\n      value: passwordCheck,\n      required: true,\n      onChange: onChangePasswordCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    })))))\n  );\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/taekyun_ha/Library/Mobile Documents/com~apple~CloudDocs/병특 취준/whoyaho_study/nodeBird/front/pages/signup.tsx"],"names":["React","useState","Head","Form","Input","AppLayout","useInput","Signup","passwordCheck","setPasswordCheck","passwordError","setPasswordError","id","onChangeId","nick","onChangeNick","password","onChangePassword","onSubmit","onChangePasswordCheck","e","target","value","padding"],"mappings":"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","sourcesContent":["import React, { useState, FC, ChangeEventHandler, ReactNode, ReactFragment } from 'react';\nimport Head from 'next/head';\nimport { Button, Checkbox, Form, Input } from 'antd';\n\nimport AppLayout from '../components/AppLayout';\nimport useInput from '../hooks/useInput';\n\nconst Signup: FC = () => {\n    /* get values to use */\n    const [passwordCheck, setPasswordCheck] = useState('');\n\n    const [passwordError, setPasswordError] = useState(false);\n\n\n\n    /* value and setter */\n    /* not sure why we needed the useInput() hook? */\n    const [id, onChangeId] = useInput('');\n    const [nick, onChangeNick] = useInput(\"\");\n    const [password, onChangePassword] = useInput('');\n\n    /* functions to be used */\n    const onSubmit = () => {\n\n    }\n    /* ?? etype? */\n    const onChangePasswordCheck = (e:any) => {\n        setPasswordError(e.target.value !== password);\n        setPasswordCheck(e.target.value);\n    }\n\n\n\n    /* the component we return */\n    return (\n        /* can return only 1 parent elem, so use <> */\n        <>\n            <Head>\n                <title>NodeBird</title>\n            </Head>\n            <AppLayout>\n                {/* Form for the 4 input fields */}\n                <Form onFinish={onSubmit} style={{ padding: 10 }}>\n                    <div>\n                        <label htmlFor=\"user-id\">ID</label>\n                        <br /> {/* line breaker */}\n                        <Input name=\"user-id\" value={id as string} required \n                        onChange={onChangeId as ChangeEventHandler<HTMLInputElement>}/>\n                    </div>\n                    <div>\n                        <label htmlFor=\"user-nick\">NickName</label>\n                        <br /> {/* line breaker */}\n                        <Input name=\"user-nick\" value={nick as string} required\n                        onChange={onChangeNick as ChangeEventHandler<HTMLInputElement>}></Input>\n                    </div>\n                    <div>\n                        <label htmlFor=\"user-password\">Password</label>\n                        <br /> {/* line breaker */}\n                        <Input name=\"user-password\" type=\"password\" value={password as string} required\n                        onChange={onChangePassword as ChangeEventHandler<HTMLInputElement>}></Input>\n                    </div>\n                    {/* div for password check */}\n                    <div>\n                    <label htmlFor=\"user-password-check\">Confirm Password</label>\n                    <br />\n                    <Input \n                        name=\"user-password-check\"\n                        type=\"password\"\n                        value={passwordCheck}\n                        required\n                        onChange={onChangePasswordCheck}\n                    />\n                    </div>\n                </Form>\n            </AppLayout>\n        </>\n    );\n};\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}